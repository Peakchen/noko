// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: c2smessage.proto

#ifndef PROTOBUF_c2smessage_2eproto__INCLUDED
#define PROTOBUF_c2smessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace c2smessage {
class c2sbasemessage;
class c2sbasemessageDefaultTypeInternal;
extern c2sbasemessageDefaultTypeInternal _c2sbasemessage_default_instance_;
class req_thirdparty_login;
class req_thirdparty_loginDefaultTypeInternal;
extern req_thirdparty_loginDefaultTypeInternal _req_thirdparty_login_default_instance_;
}  // namespace c2smessage

namespace c2smessage {

namespace protobuf_c2smessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_c2smessage_2eproto

enum c2s_message_id {
  msg_invalid_id = 0,
  msg_login = 1,
  msg_thirdparty_login = 2
};
bool c2s_message_id_IsValid(int value);
const c2s_message_id c2s_message_id_MIN = msg_invalid_id;
const c2s_message_id c2s_message_id_MAX = msg_thirdparty_login;
const int c2s_message_id_ARRAYSIZE = c2s_message_id_MAX + 1;

const ::google::protobuf::EnumDescriptor* c2s_message_id_descriptor();
inline const ::std::string& c2s_message_id_Name(c2s_message_id value) {
  return ::google::protobuf::internal::NameOfEnum(
    c2s_message_id_descriptor(), value);
}
inline bool c2s_message_id_Parse(
    const ::std::string& name, c2s_message_id* value) {
  return ::google::protobuf::internal::ParseNamedEnum<c2s_message_id>(
    c2s_message_id_descriptor(), name, value);
}
// ===================================================================

class c2sbasemessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2smessage.c2sbasemessage) */ {
 public:
  c2sbasemessage();
  virtual ~c2sbasemessage();

  c2sbasemessage(const c2sbasemessage& from);

  inline c2sbasemessage& operator=(const c2sbasemessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const c2sbasemessage& default_instance();

  static inline const c2sbasemessage* internal_default_instance() {
    return reinterpret_cast<const c2sbasemessage*>(
               &_c2sbasemessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(c2sbasemessage* other);

  // implements Message ----------------------------------------------

  inline c2sbasemessage* New() const PROTOBUF_FINAL { return New(NULL); }

  c2sbasemessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const c2sbasemessage& from);
  void MergeFrom(const c2sbasemessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(c2sbasemessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required int32 sid = 1;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 1;
  ::google::protobuf::int32 sid() const;
  void set_sid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:c2smessage.c2sbasemessage)
 private:
  void set_has_sid();
  void clear_has_sid();
  void set_has_data();
  void clear_has_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 sid_;
  friend struct protobuf_c2smessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class req_thirdparty_login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2smessage.req_thirdparty_login) */ {
 public:
  req_thirdparty_login();
  virtual ~req_thirdparty_login();

  req_thirdparty_login(const req_thirdparty_login& from);

  inline req_thirdparty_login& operator=(const req_thirdparty_login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const req_thirdparty_login& default_instance();

  static inline const req_thirdparty_login* internal_default_instance() {
    return reinterpret_cast<const req_thirdparty_login*>(
               &_req_thirdparty_login_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(req_thirdparty_login* other);

  // implements Message ----------------------------------------------

  inline req_thirdparty_login* New() const PROTOBUF_FINAL { return New(NULL); }

  req_thirdparty_login* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const req_thirdparty_login& from);
  void MergeFrom(const req_thirdparty_login& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(req_thirdparty_login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 unionid = 1;
  bool has_unionid() const;
  void clear_unionid();
  static const int kUnionidFieldNumber = 1;
  ::google::protobuf::int32 unionid() const;
  void set_unionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:c2smessage.req_thirdparty_login)
 private:
  void set_has_unionid();
  void clear_has_unionid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 unionid_;
  friend struct protobuf_c2smessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// c2sbasemessage

// required int32 sid = 1;
inline bool c2sbasemessage::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void c2sbasemessage::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void c2sbasemessage::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void c2sbasemessage::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 c2sbasemessage::sid() const {
  // @@protoc_insertion_point(field_get:c2smessage.c2sbasemessage.sid)
  return sid_;
}
inline void c2sbasemessage::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:c2smessage.c2sbasemessage.sid)
}

// required bytes data = 2;
inline bool c2sbasemessage::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void c2sbasemessage::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void c2sbasemessage::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void c2sbasemessage::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& c2sbasemessage::data() const {
  // @@protoc_insertion_point(field_get:c2smessage.c2sbasemessage.data)
  return data_.GetNoArena();
}
inline void c2sbasemessage::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2smessage.c2sbasemessage.data)
}
#if LANG_CXX11
inline void c2sbasemessage::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2smessage.c2sbasemessage.data)
}
#endif
inline void c2sbasemessage::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2smessage.c2sbasemessage.data)
}
inline void c2sbasemessage::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2smessage.c2sbasemessage.data)
}
inline ::std::string* c2sbasemessage::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:c2smessage.c2sbasemessage.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* c2sbasemessage::release_data() {
  // @@protoc_insertion_point(field_release:c2smessage.c2sbasemessage.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void c2sbasemessage::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:c2smessage.c2sbasemessage.data)
}

// -------------------------------------------------------------------

// req_thirdparty_login

// required int32 unionid = 1;
inline bool req_thirdparty_login::has_unionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void req_thirdparty_login::set_has_unionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void req_thirdparty_login::clear_has_unionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void req_thirdparty_login::clear_unionid() {
  unionid_ = 0;
  clear_has_unionid();
}
inline ::google::protobuf::int32 req_thirdparty_login::unionid() const {
  // @@protoc_insertion_point(field_get:c2smessage.req_thirdparty_login.unionid)
  return unionid_;
}
inline void req_thirdparty_login::set_unionid(::google::protobuf::int32 value) {
  set_has_unionid();
  unionid_ = value;
  // @@protoc_insertion_point(field_set:c2smessage.req_thirdparty_login.unionid)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace c2smessage

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::c2smessage::c2s_message_id> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::c2smessage::c2s_message_id>() {
  return ::c2smessage::c2s_message_id_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_c2smessage_2eproto__INCLUDED
